/*
 * 3DS OUTSCALE API
 *
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> Throttling: To protect against overloads, the number of identical requests allowed in a given time period is limited.<br /> Brute force: To protect against brute force attacks, the number of failed authentication attempts in a given time period is limited.<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/About-the-APIs.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).<br /> # Authentication Schemes ### Access Key/Secret Key The main way to authenticate your requests to the OUTSCALE API is to use an access key and a secret key.<br /> The mechanism behind this is based on AWS Signature Version 4, whose technical implementation details are described in [Signature of API Requests](https://docs.outscale.com/en/userguide/Signature-of-API-Requests.html).<br /><br /> In practice, the way to specify your access key and secret key depends on the tool or SDK you want to use to interact with the API.<br />  > For example, if you use OSC CLI: > 1. You need to create an **~/.osc/config.json** file to specify your access key, secret key, and the Region of your account. > 2. You then specify the `--profile` option when executing OSC CLI commands. > > For more information, see [Installing and Configuring OSC CLI](https://docs.outscale.com/en/userguide/Installing-and-Configuring-OSC-CLI.html).  See the code samples in each section of this documentation for specific examples in different programming languages.<br /> For more information about access keys, see [About Access Keys](https://docs.outscale.com/en/userguide/About-Access-Keys.html).  > If you try to sign requests with an invalid access key four times in a row, further authentication attempts will be prevented for 1 minute. This lockout time increases 1 minute every four failed attempts, for up to 10 minutes.  ### Login/Password For certain API actions, you can also use basic authentication with the login (email address) and password of your TINA account.<br /> This is useful only in special circumstances, for example if you do not know your access key/secret key and want to retrieve them programmatically.<br /> In most cases, however, you can use the Cockpit web interface to retrieve them.<br />  > For example, if you use OSC CLI: > 1. You need to create an **~/.osc/config.json** file to specify the Region of your account, but you leave the access key value and secret key value empty (`&quot;&quot;`). > 2. You then specify the `--profile`, `--authentication-method`, `--login`, and `--password` options when executing OSC CLI commands.  See the code samples in each section of this documentation for specific examples in different programming languages.  > If you try to sign requests with an invalid password four times in a row, further authentication attempts will be prevented for 1 minute. This lockout time increases 1 minute every four failed attempts, for up to 10 minutes.  ### No Authentication A few API actions do not require any authentication. They are indicated as such in this documentation.<br /> ### Other Security Mechanisms In parallel with the authentication schemes, you can add other security mechanisms to your OUTSCALE account, for example to restrict API requests by IP or other criteria.<br /> For more information, see [Managing Your API Accesses](https://docs.outscale.com/en/userguide/Managing-Your-API-Accesses.html). # Pagination Tutorial You can learn more about the pagination methods for read calls in the dedicated [pagination tutorial](https://docs.outscale.com/en/userguide/Tutorial-Paginating-an-API-Request.html). # Error Codes Reference You can learn more about errors returned by the API in the dedicated [errors page](api-errors.html).
 *
 * API version: 1.35.4
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package osc

import (
	"encoding/json"
)

// FiltersFlexibleGpu One or more filters.
type FiltersFlexibleGpu struct {
	// Indicates whether the fGPU is deleted when terminating the VM.
	DeleteOnVmDeletion *bool `json:"DeleteOnVmDeletion,omitempty"`
	// One or more IDs of fGPUs.
	FlexibleGpuIds *[]string `json:"FlexibleGpuIds,omitempty"`
	// The processor generations that the fGPUs are compatible with.
	Generations *[]string `json:"Generations,omitempty"`
	// One or more models of fGPUs. For more information, see [About Flexible GPUs](https://docs.outscale.com/en/userguide/About-Flexible-GPUs.html).
	ModelNames *[]string `json:"ModelNames,omitempty"`
	// The states of the fGPUs (`allocated` \\| `attaching` \\| `attached` \\| `detaching`).
	States *[]string `json:"States,omitempty"`
	// The Subregions where the fGPUs are located.
	SubregionNames *[]string `json:"SubregionNames,omitempty"`
	// One or more IDs of VMs.
	VmIds *[]string `json:"VmIds,omitempty"`
}

// NewFiltersFlexibleGpu instantiates a new FiltersFlexibleGpu object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersFlexibleGpu() *FiltersFlexibleGpu {
	this := FiltersFlexibleGpu{}
	return &this
}

// NewFiltersFlexibleGpuWithDefaults instantiates a new FiltersFlexibleGpu object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersFlexibleGpuWithDefaults() *FiltersFlexibleGpu {
	this := FiltersFlexibleGpu{}
	return &this
}

// GetDeleteOnVmDeletion returns the DeleteOnVmDeletion field value if set, zero value otherwise.
func (o *FiltersFlexibleGpu) GetDeleteOnVmDeletion() bool {
	if o == nil || o.DeleteOnVmDeletion == nil {
		var ret bool
		return ret
	}
	return *o.DeleteOnVmDeletion
}

// GetDeleteOnVmDeletionOk returns a tuple with the DeleteOnVmDeletion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersFlexibleGpu) GetDeleteOnVmDeletionOk() (*bool, bool) {
	if o == nil || o.DeleteOnVmDeletion == nil {
		return nil, false
	}
	return o.DeleteOnVmDeletion, true
}

// HasDeleteOnVmDeletion returns a boolean if a field has been set.
func (o *FiltersFlexibleGpu) HasDeleteOnVmDeletion() bool {
	if o != nil && o.DeleteOnVmDeletion != nil {
		return true
	}

	return false
}

// SetDeleteOnVmDeletion gets a reference to the given bool and assigns it to the DeleteOnVmDeletion field.
func (o *FiltersFlexibleGpu) SetDeleteOnVmDeletion(v bool) {
	o.DeleteOnVmDeletion = &v
}

// GetFlexibleGpuIds returns the FlexibleGpuIds field value if set, zero value otherwise.
func (o *FiltersFlexibleGpu) GetFlexibleGpuIds() []string {
	if o == nil || o.FlexibleGpuIds == nil {
		var ret []string
		return ret
	}
	return *o.FlexibleGpuIds
}

// GetFlexibleGpuIdsOk returns a tuple with the FlexibleGpuIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersFlexibleGpu) GetFlexibleGpuIdsOk() (*[]string, bool) {
	if o == nil || o.FlexibleGpuIds == nil {
		return nil, false
	}
	return o.FlexibleGpuIds, true
}

// HasFlexibleGpuIds returns a boolean if a field has been set.
func (o *FiltersFlexibleGpu) HasFlexibleGpuIds() bool {
	if o != nil && o.FlexibleGpuIds != nil {
		return true
	}

	return false
}

// SetFlexibleGpuIds gets a reference to the given []string and assigns it to the FlexibleGpuIds field.
func (o *FiltersFlexibleGpu) SetFlexibleGpuIds(v []string) {
	o.FlexibleGpuIds = &v
}

// GetGenerations returns the Generations field value if set, zero value otherwise.
func (o *FiltersFlexibleGpu) GetGenerations() []string {
	if o == nil || o.Generations == nil {
		var ret []string
		return ret
	}
	return *o.Generations
}

// GetGenerationsOk returns a tuple with the Generations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersFlexibleGpu) GetGenerationsOk() (*[]string, bool) {
	if o == nil || o.Generations == nil {
		return nil, false
	}
	return o.Generations, true
}

// HasGenerations returns a boolean if a field has been set.
func (o *FiltersFlexibleGpu) HasGenerations() bool {
	if o != nil && o.Generations != nil {
		return true
	}

	return false
}

// SetGenerations gets a reference to the given []string and assigns it to the Generations field.
func (o *FiltersFlexibleGpu) SetGenerations(v []string) {
	o.Generations = &v
}

// GetModelNames returns the ModelNames field value if set, zero value otherwise.
func (o *FiltersFlexibleGpu) GetModelNames() []string {
	if o == nil || o.ModelNames == nil {
		var ret []string
		return ret
	}
	return *o.ModelNames
}

// GetModelNamesOk returns a tuple with the ModelNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersFlexibleGpu) GetModelNamesOk() (*[]string, bool) {
	if o == nil || o.ModelNames == nil {
		return nil, false
	}
	return o.ModelNames, true
}

// HasModelNames returns a boolean if a field has been set.
func (o *FiltersFlexibleGpu) HasModelNames() bool {
	if o != nil && o.ModelNames != nil {
		return true
	}

	return false
}

// SetModelNames gets a reference to the given []string and assigns it to the ModelNames field.
func (o *FiltersFlexibleGpu) SetModelNames(v []string) {
	o.ModelNames = &v
}

// GetStates returns the States field value if set, zero value otherwise.
func (o *FiltersFlexibleGpu) GetStates() []string {
	if o == nil || o.States == nil {
		var ret []string
		return ret
	}
	return *o.States
}

// GetStatesOk returns a tuple with the States field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersFlexibleGpu) GetStatesOk() (*[]string, bool) {
	if o == nil || o.States == nil {
		return nil, false
	}
	return o.States, true
}

// HasStates returns a boolean if a field has been set.
func (o *FiltersFlexibleGpu) HasStates() bool {
	if o != nil && o.States != nil {
		return true
	}

	return false
}

// SetStates gets a reference to the given []string and assigns it to the States field.
func (o *FiltersFlexibleGpu) SetStates(v []string) {
	o.States = &v
}

// GetSubregionNames returns the SubregionNames field value if set, zero value otherwise.
func (o *FiltersFlexibleGpu) GetSubregionNames() []string {
	if o == nil || o.SubregionNames == nil {
		var ret []string
		return ret
	}
	return *o.SubregionNames
}

// GetSubregionNamesOk returns a tuple with the SubregionNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersFlexibleGpu) GetSubregionNamesOk() (*[]string, bool) {
	if o == nil || o.SubregionNames == nil {
		return nil, false
	}
	return o.SubregionNames, true
}

// HasSubregionNames returns a boolean if a field has been set.
func (o *FiltersFlexibleGpu) HasSubregionNames() bool {
	if o != nil && o.SubregionNames != nil {
		return true
	}

	return false
}

// SetSubregionNames gets a reference to the given []string and assigns it to the SubregionNames field.
func (o *FiltersFlexibleGpu) SetSubregionNames(v []string) {
	o.SubregionNames = &v
}

// GetVmIds returns the VmIds field value if set, zero value otherwise.
func (o *FiltersFlexibleGpu) GetVmIds() []string {
	if o == nil || o.VmIds == nil {
		var ret []string
		return ret
	}
	return *o.VmIds
}

// GetVmIdsOk returns a tuple with the VmIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersFlexibleGpu) GetVmIdsOk() (*[]string, bool) {
	if o == nil || o.VmIds == nil {
		return nil, false
	}
	return o.VmIds, true
}

// HasVmIds returns a boolean if a field has been set.
func (o *FiltersFlexibleGpu) HasVmIds() bool {
	if o != nil && o.VmIds != nil {
		return true
	}

	return false
}

// SetVmIds gets a reference to the given []string and assigns it to the VmIds field.
func (o *FiltersFlexibleGpu) SetVmIds(v []string) {
	o.VmIds = &v
}

func (o FiltersFlexibleGpu) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeleteOnVmDeletion != nil {
		toSerialize["DeleteOnVmDeletion"] = o.DeleteOnVmDeletion
	}
	if o.FlexibleGpuIds != nil {
		toSerialize["FlexibleGpuIds"] = o.FlexibleGpuIds
	}
	if o.Generations != nil {
		toSerialize["Generations"] = o.Generations
	}
	if o.ModelNames != nil {
		toSerialize["ModelNames"] = o.ModelNames
	}
	if o.States != nil {
		toSerialize["States"] = o.States
	}
	if o.SubregionNames != nil {
		toSerialize["SubregionNames"] = o.SubregionNames
	}
	if o.VmIds != nil {
		toSerialize["VmIds"] = o.VmIds
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersFlexibleGpu struct {
	value *FiltersFlexibleGpu
	isSet bool
}

func (v NullableFiltersFlexibleGpu) Get() *FiltersFlexibleGpu {
	return v.value
}

func (v *NullableFiltersFlexibleGpu) Set(val *FiltersFlexibleGpu) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersFlexibleGpu) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersFlexibleGpu) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersFlexibleGpu(val *FiltersFlexibleGpu) *NullableFiltersFlexibleGpu {
	return &NullableFiltersFlexibleGpu{value: val, isSet: true}
}

func (v NullableFiltersFlexibleGpu) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersFlexibleGpu) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
