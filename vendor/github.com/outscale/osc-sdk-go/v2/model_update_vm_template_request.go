/*
 * 3DS OUTSCALE API
 *
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> Throttling: To protect against overloads, the number of identical requests allowed in a given time period is limited.<br /> Brute force: To protect against brute force attacks, the number of failed authentication attempts in a given time period is limited.<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/About-the-APIs.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of this API is also available for download: <button>[GitHub repository](https://github.com/outscale/osc-api)</button><br /> # Authentication Schemes ### Access Key/Secret Key The main way to authenticate your requests to the OUTSCALE API is to use an access key and a secret key.<br /> The mechanism behind this is based on AWS Signature Version 4, whose technical implementation details are described in [Signature of API Requests](https://docs.outscale.com/en/userguide/Signature-of-API-Requests.html).<br /><br /> In practice, the way to specify your access key and secret key depends on the tool or SDK you want to use to interact with the API.<br />  > For example, if you use OSC CLI: > 1. You need to create an **~/.osc/config.json** file to specify your access key, secret key, and the Region of your account. > 2. You then specify the `--profile` option when executing OSC CLI commands. > > For more information, see [Installing and Configuring OSC CLI](https://docs.outscale.com/en/userguide/Installing-and-Configuring-OSC-CLI.html).  See the code samples in each section of this documentation for specific examples in different programming languages.<br /> For more information about access keys, see [About Access Keys](https://docs.outscale.com/en/userguide/About-Access-Keys.html).  > If you try to sign requests with an invalid access key four times in a row, further authentication attempts will be prevented for 1 minute. This lockout time increases 1 minute every four failed attempts, for up to 10 minutes.  ### Login/Password For certain API actions, you can also use basic authentication with the login (email address) and password of your TINA account.<br /> This is useful only in special circumstances, for example if you do not know your access key/secret key and want to retrieve them programmatically.<br /> In most cases, however, you can use the Cockpit web interface to retrieve them.<br />  > For example, if you use OSC CLI: > 1. You need to create an **~/.osc/config.json** file to specify the Region of your account, but you leave the access key value and secret key value empty (`&quot;&quot;`). > 2. You then specify the `--profile`, `--authentication-method`, `--login`, and `--password` options when executing OSC CLI commands.  See the code samples in each section of this documentation for specific examples in different programming languages.  > If you try to sign requests with an invalid password four times in a row, further authentication attempts will be prevented for 1 minute. This lockout time increases 1 minute every four failed attempts, for up to 10 minutes.  ### No Authentication A few API actions do not require any authentication. They are indicated as such in this documentation.<br /> ### Other Security Mechanisms In parallel with the authentication schemes, you can add other security mechanisms to your OUTSCALE account, for example to restrict API requests by IP or other criteria.<br /> For more information, see [Managing Your API Accesses](https://docs.outscale.com/en/userguide/Managing-Your-API-Accesses.html). # Pagination Tutorial You can learn more about the pagination methods for read calls in the dedicated [pagination tutorial](https://docs.outscale.com/en/userguide/Tutorial-Paginating-an-API-Request.html). # Error Codes Reference You can learn more about errors returned by the API in the dedicated [errors page](api-errors.html).
 *
 * API version: 1.35.5
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package osc

import (
	"encoding/json"
)

// UpdateVmTemplateRequest struct for UpdateVmTemplateRequest
type UpdateVmTemplateRequest struct {
	// A new description for the VM template.
	Description *string `json:"Description,omitempty"`
	// If true, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// New tags for your VM template.
	Tags *[]ResourceTag `json:"Tags,omitempty"`
	// The ID of the VM template you want to update.
	VmTemplateId string `json:"VmTemplateId"`
	// A new name for your VM template.
	VmTemplateName *string `json:"VmTemplateName,omitempty"`
}

// NewUpdateVmTemplateRequest instantiates a new UpdateVmTemplateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateVmTemplateRequest(vmTemplateId string) *UpdateVmTemplateRequest {
	this := UpdateVmTemplateRequest{}
	this.VmTemplateId = vmTemplateId
	return &this
}

// NewUpdateVmTemplateRequestWithDefaults instantiates a new UpdateVmTemplateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateVmTemplateRequestWithDefaults() *UpdateVmTemplateRequest {
	this := UpdateVmTemplateRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateVmTemplateRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVmTemplateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateVmTemplateRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateVmTemplateRequest) SetDescription(v string) {
	o.Description = &v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *UpdateVmTemplateRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVmTemplateRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *UpdateVmTemplateRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *UpdateVmTemplateRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *UpdateVmTemplateRequest) GetTags() []ResourceTag {
	if o == nil || o.Tags == nil {
		var ret []ResourceTag
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVmTemplateRequest) GetTagsOk() (*[]ResourceTag, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *UpdateVmTemplateRequest) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []ResourceTag and assigns it to the Tags field.
func (o *UpdateVmTemplateRequest) SetTags(v []ResourceTag) {
	o.Tags = &v
}

// GetVmTemplateId returns the VmTemplateId field value
func (o *UpdateVmTemplateRequest) GetVmTemplateId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VmTemplateId
}

// GetVmTemplateIdOk returns a tuple with the VmTemplateId field value
// and a boolean to check if the value has been set.
func (o *UpdateVmTemplateRequest) GetVmTemplateIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VmTemplateId, true
}

// SetVmTemplateId sets field value
func (o *UpdateVmTemplateRequest) SetVmTemplateId(v string) {
	o.VmTemplateId = v
}

// GetVmTemplateName returns the VmTemplateName field value if set, zero value otherwise.
func (o *UpdateVmTemplateRequest) GetVmTemplateName() string {
	if o == nil || o.VmTemplateName == nil {
		var ret string
		return ret
	}
	return *o.VmTemplateName
}

// GetVmTemplateNameOk returns a tuple with the VmTemplateName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVmTemplateRequest) GetVmTemplateNameOk() (*string, bool) {
	if o == nil || o.VmTemplateName == nil {
		return nil, false
	}
	return o.VmTemplateName, true
}

// HasVmTemplateName returns a boolean if a field has been set.
func (o *UpdateVmTemplateRequest) HasVmTemplateName() bool {
	if o != nil && o.VmTemplateName != nil {
		return true
	}

	return false
}

// SetVmTemplateName gets a reference to the given string and assigns it to the VmTemplateName field.
func (o *UpdateVmTemplateRequest) SetVmTemplateName(v string) {
	o.VmTemplateName = &v
}

func (o UpdateVmTemplateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["Description"] = o.Description
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	if true {
		toSerialize["VmTemplateId"] = o.VmTemplateId
	}
	if o.VmTemplateName != nil {
		toSerialize["VmTemplateName"] = o.VmTemplateName
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateVmTemplateRequest struct {
	value *UpdateVmTemplateRequest
	isSet bool
}

func (v NullableUpdateVmTemplateRequest) Get() *UpdateVmTemplateRequest {
	return v.value
}

func (v *NullableUpdateVmTemplateRequest) Set(val *UpdateVmTemplateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateVmTemplateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateVmTemplateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateVmTemplateRequest(val *UpdateVmTemplateRequest) *NullableUpdateVmTemplateRequest {
	return &NullableUpdateVmTemplateRequest{value: val, isSet: true}
}

func (v NullableUpdateVmTemplateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateVmTemplateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
