/*
 * 3DS OUTSCALE API
 *
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> Throttling: To protect against overloads, the number of identical requests allowed in a given time period is limited.<br /> Brute force: To protect against brute force attacks, the number of failed authentication attempts in a given time period is limited.<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/About-the-APIs.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).<br /> # Authentication Schemes ### Access Key/Secret Key The main way to authenticate your requests to the OUTSCALE API is to use an access key and a secret key.<br /> The mechanism behind this is based on AWS Signature Version 4, whose technical implementation details are described in [Signature of API Requests](https://docs.outscale.com/en/userguide/Signature-of-API-Requests.html).<br /><br /> In practice, the way to specify your access key and secret key depends on the tool or SDK you want to use to interact with the API.<br />  > For example, if you use OSC CLI: > 1. You need to create an **~/.osc/config.json** file to specify your access key, secret key, and the Region of your account. > 2. You then specify the `--profile` option when executing OSC CLI commands. > > For more information, see [Installing and Configuring OSC CLI](https://docs.outscale.com/en/userguide/Installing-and-Configuring-OSC-CLI.html).  See the code samples in each section of this documentation for specific examples in different programming languages.<br /> For more information about access keys, see [About Access Keys](https://docs.outscale.com/en/userguide/About-Access-Keys.html).  > If you try to sign requests with an invalid access key four times in a row, further authentication attempts will be prevented for 1 minute. This lockout time increases 1 minute every four failed attempts, for up to 10 minutes.  ### Login/Password For certain API actions, you can also use basic authentication with the login (email address) and password of your TINA account.<br /> This is useful only in special circumstances, for example if you do not know your access key/secret key and want to retrieve them programmatically.<br /> In most cases, however, you can use the Cockpit web interface to retrieve them.<br />  > For example, if you use OSC CLI: > 1. You need to create an **~/.osc/config.json** file to specify the Region of your account, but you leave the access key value and secret key value empty (`&quot;&quot;`). > 2. You then specify the `--profile`, `--authentication-method`, `--login`, and `--password` options when executing OSC CLI commands.  See the code samples in each section of this documentation for specific examples in different programming languages.  > If you try to sign requests with an invalid password four times in a row, further authentication attempts will be prevented for 1 minute. This lockout time increases 1 minute every four failed attempts, for up to 10 minutes.  ### No Authentication A few API actions do not require any authentication. They are indicated as such in this documentation.<br /> ### Other Security Mechanisms In parallel with the authentication schemes, you can add other security mechanisms to your OUTSCALE account, for example to restrict API requests by IP or other criteria.<br /> For more information, see [Managing Your API Accesses](https://docs.outscale.com/en/userguide/Managing-Your-API-Accesses.html). # Pagination Tutorial You can learn more about the pagination methods for read calls in the dedicated [pagination tutorial](https://docs.outscale.com/en/userguide/Tutorial-Paginating-an-API-Request.html). # Error Codes Reference You can learn more about errors returned by the API in the dedicated [errors page](api-errors.html).
 *
 * API version: 1.35.3
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package osc

import (
	"encoding/json"
)

// ListenerRuleForCreation Information about the listener rule.
type ListenerRuleForCreation struct {
	// The type of action for the rule (always `forward`).
	Action *string `json:"Action,omitempty"`
	// A host-name pattern for the rule, with a maximum length of 128 characters. This host-name pattern supports maximum three wildcards, and must not contain any special characters except `-.?`.
	HostNamePattern *string `json:"HostNamePattern,omitempty"`
	// A human-readable name for the listener rule.
	ListenerRuleName string `json:"ListenerRuleName"`
	// A path pattern for the rule, with a maximum length of 128 characters. This path pattern supports maximum three wildcards, and must not contain any special characters except `_-.$/~&quot;'@:+?`.
	PathPattern *string `json:"PathPattern,omitempty"`
	// The priority level of the listener rule, between `1` and `19999` both included. Each rule must have a unique priority level. Otherwise, an error is returned.
	Priority int32 `json:"Priority"`
}

// NewListenerRuleForCreation instantiates a new ListenerRuleForCreation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListenerRuleForCreation(listenerRuleName string, priority int32) *ListenerRuleForCreation {
	this := ListenerRuleForCreation{}
	this.ListenerRuleName = listenerRuleName
	this.Priority = priority
	return &this
}

// NewListenerRuleForCreationWithDefaults instantiates a new ListenerRuleForCreation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListenerRuleForCreationWithDefaults() *ListenerRuleForCreation {
	this := ListenerRuleForCreation{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *ListenerRuleForCreation) GetAction() string {
	if o == nil || o.Action == nil {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListenerRuleForCreation) GetActionOk() (*string, bool) {
	if o == nil || o.Action == nil {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *ListenerRuleForCreation) HasAction() bool {
	if o != nil && o.Action != nil {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *ListenerRuleForCreation) SetAction(v string) {
	o.Action = &v
}

// GetHostNamePattern returns the HostNamePattern field value if set, zero value otherwise.
func (o *ListenerRuleForCreation) GetHostNamePattern() string {
	if o == nil || o.HostNamePattern == nil {
		var ret string
		return ret
	}
	return *o.HostNamePattern
}

// GetHostNamePatternOk returns a tuple with the HostNamePattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListenerRuleForCreation) GetHostNamePatternOk() (*string, bool) {
	if o == nil || o.HostNamePattern == nil {
		return nil, false
	}
	return o.HostNamePattern, true
}

// HasHostNamePattern returns a boolean if a field has been set.
func (o *ListenerRuleForCreation) HasHostNamePattern() bool {
	if o != nil && o.HostNamePattern != nil {
		return true
	}

	return false
}

// SetHostNamePattern gets a reference to the given string and assigns it to the HostNamePattern field.
func (o *ListenerRuleForCreation) SetHostNamePattern(v string) {
	o.HostNamePattern = &v
}

// GetListenerRuleName returns the ListenerRuleName field value
func (o *ListenerRuleForCreation) GetListenerRuleName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ListenerRuleName
}

// GetListenerRuleNameOk returns a tuple with the ListenerRuleName field value
// and a boolean to check if the value has been set.
func (o *ListenerRuleForCreation) GetListenerRuleNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ListenerRuleName, true
}

// SetListenerRuleName sets field value
func (o *ListenerRuleForCreation) SetListenerRuleName(v string) {
	o.ListenerRuleName = v
}

// GetPathPattern returns the PathPattern field value if set, zero value otherwise.
func (o *ListenerRuleForCreation) GetPathPattern() string {
	if o == nil || o.PathPattern == nil {
		var ret string
		return ret
	}
	return *o.PathPattern
}

// GetPathPatternOk returns a tuple with the PathPattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListenerRuleForCreation) GetPathPatternOk() (*string, bool) {
	if o == nil || o.PathPattern == nil {
		return nil, false
	}
	return o.PathPattern, true
}

// HasPathPattern returns a boolean if a field has been set.
func (o *ListenerRuleForCreation) HasPathPattern() bool {
	if o != nil && o.PathPattern != nil {
		return true
	}

	return false
}

// SetPathPattern gets a reference to the given string and assigns it to the PathPattern field.
func (o *ListenerRuleForCreation) SetPathPattern(v string) {
	o.PathPattern = &v
}

// GetPriority returns the Priority field value
func (o *ListenerRuleForCreation) GetPriority() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value
// and a boolean to check if the value has been set.
func (o *ListenerRuleForCreation) GetPriorityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Priority, true
}

// SetPriority sets field value
func (o *ListenerRuleForCreation) SetPriority(v int32) {
	o.Priority = v
}

func (o ListenerRuleForCreation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Action != nil {
		toSerialize["Action"] = o.Action
	}
	if o.HostNamePattern != nil {
		toSerialize["HostNamePattern"] = o.HostNamePattern
	}
	if true {
		toSerialize["ListenerRuleName"] = o.ListenerRuleName
	}
	if o.PathPattern != nil {
		toSerialize["PathPattern"] = o.PathPattern
	}
	if true {
		toSerialize["Priority"] = o.Priority
	}
	return json.Marshal(toSerialize)
}

type NullableListenerRuleForCreation struct {
	value *ListenerRuleForCreation
	isSet bool
}

func (v NullableListenerRuleForCreation) Get() *ListenerRuleForCreation {
	return v.value
}

func (v *NullableListenerRuleForCreation) Set(val *ListenerRuleForCreation) {
	v.value = val
	v.isSet = true
}

func (v NullableListenerRuleForCreation) IsSet() bool {
	return v.isSet
}

func (v *NullableListenerRuleForCreation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListenerRuleForCreation(val *ListenerRuleForCreation) *NullableListenerRuleForCreation {
	return &NullableListenerRuleForCreation{value: val, isSet: true}
}

func (v NullableListenerRuleForCreation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListenerRuleForCreation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
