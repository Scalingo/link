{
   "base_directory": "github.com/Scalingo/link",
   "base_package": "github.com/Scalingo/link/v2",
   "mocks": [
      {
         "interface": "Storage",
         "src_package": "models"
      },
      {
         "interface": "EncryptedStorage",
         "src_package": "models"
      },
      {
         "interface": "ARP",
         "src_package": "network"
      },
      {
         "interface": "Interface",
         "src_package": "network"
      },
      {
         "interface": "Scheduler",
         "src_package": "scheduler"
      },
      {
         "interface": "Client",
         "src_package": "api"
      },
      {
         "interface": "Checker",
         "src_package": "healthcheck"
      },
      {
         "interface": "Locker",
         "src_package": "locker"
      },
      {
         "interface": "Watcher",
         "src_package": "watcher"
      },
      {
         "interface": "EtcdLeaseManager",
         "mock_file": "locker/etcd_lease_manager_mock.go",
         "src_package": "locker"
      },
      {
         "interface": "Plugin",
         "src_package": "plugin"
      },
      {
         "interface": "Registry",
         "src_package": "plugin"
      },
      {
         "interface": "Creator",
         "src_package": "endpoint"
      },
      {
         "interface": "PublicIPClient",
         "src_package": "services/outscale"
      },
      {
         "external": true,
         "src_package": "go.etcd.io/etcd/client/v3",
         "interface": "KV",
         "mock_file": "etcdmock/kv_mock.go"
      },
      {
         "external": true,
         "src_package": "go.etcd.io/etcd/client/v3",
         "interface": "Lease",
         "mock_file": "etcdmock/lease_mock.go"
      },
      {
         "external": true,
         "src_package": "go.etcd.io/etcd/client/v3",
         "interface": "Txn",
         "mock_file": "etcdmock/txn_mock.go"
      }
   ]
}
