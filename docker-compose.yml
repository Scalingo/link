services:
  link-1:
    build: .
    volumes:
      - ./:/go/src/github.com/Scalingo/link
      - ./_dev/go-cache:/root/.cache
    cap_add:
      - NET_ADMIN
    network_mode: "host"
    env_file:
      - .env
    environment:
      HOSTNAME: link-1
      INTERFACE: eth10
      PORT: 1313
    command: reflex -r '\.go$$' -R '_test\.go$$' -s -- sh -c 'go build -buildvcs=false && ./link'
    depends_on:
      - etcd
  link-2:
    build: .
    volumes:
      - ./:/go/src/github.com/Scalingo/link
      - ./_dev/go-cache:/root/.cache
    cap_add:
      - NET_ADMIN
    network_mode: "host"
    env_file:
      - .env
    environment:
      HOSTNAME: link-2
      INTERFACE: eth11
      PORT: 1314
    command: reflex --all -r 'link' -s -- sh -c './link'
    depends_on:
      - etcd
  link-3:
    build: .
    volumes:
      - ./:/go/src/github.com/Scalingo/link
      - ./_dev/go-cache:/root/.cache
    cap_add:
      - NET_ADMIN
    network_mode: "host"
    env_file:
      - .env
    environment:
      HOSTNAME: link-3
      INTERFACE: eth12
      PORT: 1315
    command: reflex --all -r 'link' -s -- sh -c './link'
    depends_on:
      - etcd
  link-4:
    build: .
    volumes:
      - ./:/go/src/github.com/Scalingo/link
      - ./_dev/go-cache:/root/.cache
    cap_add:
      - NET_ADMIN
    network_mode: "host"
    env_file:
      - .env
    environment:
      HOSTNAME: link-4
      INTERFACE: eth13
      PORT: 1316
    command: reflex --all -r 'link' -s -- sh -c './link'
    depends_on:
      - etcd
  link-5:
    build: .
    volumes:
      - ./:/go/src/github.com/Scalingo/link
      - ./_dev/go-cache:/root/.cache
    cap_add:
      - NET_ADMIN
    network_mode: "host"
    env_file:
      - .env
    environment:
      HOSTNAME: link-5
      INTERFACE: eth14
      PORT: 1317
    command: reflex --all -r 'link' -s -- sh -c './link'
    depends_on:
      - etcd

  test:
    build: .
    volumes:
      - ./:/go/src/github.com/Scalingo/link
      - ./_dev/go-cache:/root/.cache
    env_file:
      - .env.test
    stop_signal: SIGKILL
    command: "tail -F /dev/null"

  etcd:
    volumes:
      - ./_dev/etcd:/data/etcd
    image: quay.io/coreos/etcd:v3.5.17
    command: etcd --name etcd-cluster --data-dir /data/etcd --listen-client-urls http://0.0.0.0:2379 --listen-peer-urls http://0.0.0.0:2380 --advertise-client-urls http://172.17.0.1:32379
    ports:
      - 32379:2379
