// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Scalingo/link/v3/services/outscale (interfaces: PublicIPClient)

// Package outscalemock is a generated GoMock package.
package outscalemock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	osc "github.com/outscale/osc-sdk-go/v2"
)

// MockPublicIPClient is a mock of PublicIPClient interface.
type MockPublicIPClient struct {
	ctrl     *gomock.Controller
	recorder *MockPublicIPClientMockRecorder
}

// MockPublicIPClientMockRecorder is the mock recorder for MockPublicIPClient.
type MockPublicIPClientMockRecorder struct {
	mock *MockPublicIPClient
}

// NewMockPublicIPClient creates a new mock instance.
func NewMockPublicIPClient(ctrl *gomock.Controller) *MockPublicIPClient {
	mock := &MockPublicIPClient{ctrl: ctrl}
	mock.recorder = &MockPublicIPClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPublicIPClient) EXPECT() *MockPublicIPClientMockRecorder {
	return m.recorder
}

// LinkPublicIP mocks base method.
func (m *MockPublicIPClient) LinkPublicIP(arg0 context.Context, arg1 osc.LinkPublicIpRequest) (osc.LinkPublicIpResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LinkPublicIP", arg0, arg1)
	ret0, _ := ret[0].(osc.LinkPublicIpResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LinkPublicIP indicates an expected call of LinkPublicIP.
func (mr *MockPublicIPClientMockRecorder) LinkPublicIP(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LinkPublicIP", reflect.TypeOf((*MockPublicIPClient)(nil).LinkPublicIP), arg0, arg1)
}

// ReadPublicIP mocks base method.
func (m *MockPublicIPClient) ReadPublicIP(arg0 context.Context, arg1 string) (osc.PublicIp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadPublicIP", arg0, arg1)
	ret0, _ := ret[0].(osc.PublicIp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReadPublicIP indicates an expected call of ReadPublicIP.
func (mr *MockPublicIPClientMockRecorder) ReadPublicIP(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadPublicIP", reflect.TypeOf((*MockPublicIPClient)(nil).ReadPublicIP), arg0, arg1)
}

// UnlinkPublicIP mocks base method.
func (m *MockPublicIPClient) UnlinkPublicIP(arg0 context.Context, arg1 osc.UnlinkPublicIpRequest) (osc.UnlinkPublicIpResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UnlinkPublicIP", arg0, arg1)
	ret0, _ := ret[0].(osc.UnlinkPublicIpResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UnlinkPublicIP indicates an expected call of UnlinkPublicIP.
func (mr *MockPublicIPClientMockRecorder) UnlinkPublicIP(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UnlinkPublicIP", reflect.TypeOf((*MockPublicIPClient)(nil).UnlinkPublicIP), arg0, arg1)
}
