// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Scalingo/link/v2/network (interfaces: Interface)

// Package networkmock is a generated GoMock package.
package networkmock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockInterface is a mock of Interface interface.
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface.
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance.
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// EnsureIP mocks base method.
func (m *MockInterface) EnsureIP(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EnsureIP", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// EnsureIP indicates an expected call of EnsureIP.
func (mr *MockInterfaceMockRecorder) EnsureIP(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EnsureIP", reflect.TypeOf((*MockInterface)(nil).EnsureIP), arg0)
}

// RemoveIP mocks base method.
func (m *MockInterface) RemoveIP(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveIP", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveIP indicates an expected call of RemoveIP.
func (mr *MockInterfaceMockRecorder) RemoveIP(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveIP", reflect.TypeOf((*MockInterface)(nil).RemoveIP), arg0)
}
